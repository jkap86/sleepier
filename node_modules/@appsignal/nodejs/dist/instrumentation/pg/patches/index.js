"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.patchPromise = exports.patchSubmittable = exports.patchCallback = void 0;
const tslib_1 = require("tslib");
const shimmer_1 = tslib_1.__importDefault(require("shimmer"));
function patchCallback(tracer, span, callback) {
    return tracer.wrap((err, res) => {
        if (err)
            tracer.setError(err);
        span.close();
        return callback(err, res);
    });
}
exports.patchCallback = patchCallback;
function patchSubmittable(tracer, span, submittable) {
    let spanEnded = false;
    if (submittable.handleError) {
        shimmer_1.default.wrap(submittable, "handleError", original => {
            return tracer.wrap(function (...args) {
                if (!spanEnded) {
                    const err = args[0];
                    tracer.setError(err);
                    span.close();
                    spanEnded = true;
                }
                if (original) {
                    return original.apply(this, args);
                }
            });
        });
    }
    if (submittable.handleReadyForQuery) {
        shimmer_1.default.wrap(submittable, "handleReadyForQuery", original => {
            return tracer.wrap(function (...args) {
                if (!spanEnded) {
                    span.close();
                    spanEnded = true;
                }
                if (original) {
                    return original.apply(this, args);
                }
            });
        });
    }
    return submittable;
}
exports.patchSubmittable = patchSubmittable;
function patchPromise(tracer, span, promise) {
    return promise.then(res => {
        span.close();
        return res;
    }, err => {
        tracer.setError(err);
        span.close();
        throw err;
    });
}
exports.patchPromise = patchPromise;
