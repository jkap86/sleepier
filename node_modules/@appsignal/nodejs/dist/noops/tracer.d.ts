/// <reference types="node" />
import { Func } from "@appsignal/types";
import { Span, SpanOptions, SpanContext, Tracer } from "../interfaces";
import { EventEmitter } from "events";
export declare class NoopTracer implements Tracer {
    createSpan(_options?: Partial<SpanOptions>, _spanOrContext?: Span | SpanContext): Span;
    createRootSpan(_options?: Partial<SpanOptions>): Span;
    currentSpan(): Span;
    rootSpan(): Span;
    setError(_error: Error): Span;
    sendError<T>(_error: Error, _fn: (s: Span) => T): void;
    withSpan<T>(span: Span, fn: (s: Span) => T): T;
    wrap<T>(fn: Func<T>): Func<T>;
    wrapEmitter(_emitter: EventEmitter): void;
}
